https://gdquest.mavenseed.com/lessons/signals-connection-and-good-practices
https://gdquest.mavenseed.com/lessons/cheatsheet-the-most-useful-ui-nodes-to-get-started
https://www.gdquest.com/docs/guidelines/best-practices/godot-gdscript/
https://youtu.be/n505BEFqPnw


$CollisionShape2D.set_deferred("disabled", true)
==
wait(engine)
$CollisionShape2D = true 

By connecting a signal to a node, you can let Godot call a function of that node every time the signal emits. We call that function a callback because it gets “called back” when the signal emits.

Sleep : yield(tree.create_timer(3.5), "timeout")

You can't access a child of a node until that node got a proper reference to it. When you create the instance, before you added it to the scene tree with add_child(), its points_label and name_label are unset because they initialize on ready.

To instantiate a new child :
var child = preload("Path_to_Scene.tscn").instance()
add_child(child)
https://godotengine.org/qa/6845/anyone-please-explain-preloading-actually-regular-loading

////////////////////////////////////////////////////////////////////

NODES

Dans une Node, les propriétés et méthodes de la node sont accessibles directement donc
add_child()
get_node()
etc sont relatifs.

get_node() pour aller chercher une "sous" node
get_node("descending/path").any_method() notamment
Note: In Godot, the $ is an alias for the get_node() function.
signal pour envoyer de la sous-node vers la node parente. 

ANIMATION
Tweens = In-between animations (computer generated in between animations)
